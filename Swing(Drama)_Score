import chess
import chess.pgn
import chess.engine
import io
import math

STOCKFISH_PATH = r"STOCKFISH PATH HERE"

def compute_drama_from_pgn(pgn_string, time_limit=0.5):
    game = chess.pgn.read_game(io.StringIO(pgn_string.strip()))
    board = game.board()
    engine = chess.engine.SimpleEngine.popen_uci(STOCKFISH_PATH)

    esi = 0
    lead_changes = 0
    prev_eval = None
    prev_sign = None  # Use None instead of 0 to distinguish "unset"

    moves = list(game.mainline_moves())

    for move in moves:
        board.push(move)
        info = engine.analyse(board, chess.engine.Limit(time=time_limit))
        score = info["score"].relative

        # Skip mate evaluations
        if score.is_mate():
            break

        cp = score.score()
        current_sign = 1 if cp > 0 else (-1 if cp < 0 else 0)

        if prev_eval is not None:
            swing = abs(cp - prev_eval)

            # Only count swing in ESI if it crosses 0 and is large
            if (
                swing >= 400 and
                prev_sign is not None and
                current_sign != 0 and
                current_sign != prev_sign
            ):
                esi += swing

            # Count lead change
            if (
                prev_sign is not None and
                current_sign != 0 and
                current_sign != prev_sign
            ):
                lead_changes += 1

        prev_eval = cp
        prev_sign = current_sign

    engine.quit()

    drama = 10 * math.sqrt(esi) + 5 * lead_changes
    return drama


if __name__ == "__main__":
    pgn = """PGN HERE"""

    drama_score = compute_drama_from_pgn(pgn, time_limit=0.5)
    print(f"Drama score for PGN: {drama_score:.2f}")
